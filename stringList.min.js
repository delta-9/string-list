var f=Object.defineProperty;var h=(r,n,t)=>n in r?f(r,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[n]=t;var a=(r,n,t)=>(h(r,typeof n!="symbol"?n+"":n,t),t);var i=(r,n)=>{if(r&&n&&Object.isFrozen(r)){/* c8 ignore next 3 @preserve */return Object.freeze(n)}return n},o=class r extends Array{constructor(...t){let e=[],s=[],u=!1;for(let p of t.flat())typeof p=="string"&&(p===""&&(u=!0),e.push([p,p]),s.push(p));super(...s);a(this,"infered",{Union:void 0,Tuple:void 0,Mutable:void 0,Unsorted:void 0});a(this,"enum");a(this,"hasEmpty",!1);this.hasEmpty=u,this.enum=Object.fromEntries(e),this.hasEmpty&&(this.enum[""]=""),Object.freeze(this.enum)}concat(...t){return i(this,new r(...super.concat.apply(this,t.flat())))}concatList(t){return this.concat(...t)}toSorted(){return i(this,new r(...super.toSorted.apply(this,arguments)))}toReversed(){return i(this,new r(...super.toReversed.apply(this,arguments)))}reverse(){return i(this,new r(...super.reverse.apply(this,arguments)))}toSpliced(){return i(this,new r(...super.toSpliced.apply(this,arguments)))}slice(){return i(this,new r(...super.slice.apply(this,arguments)))}without(){let t=Array.from(arguments).flatMap(e=>Array.isArray(e)?e.filter(s=>typeof s=="string"):typeof e=="string"?[e]:[]);return i(this,new r(...this.filter(e=>!t.includes(e))))}withTrim(){return i(this,new r(...super.map(t=>t.trim())))}withPrefix(t=""){return i(this,new r(...super.map(e=>`${t}${e}`)))}withSuffix(t=""){return i(this,new r(...super.map(e=>`${e}${t}`)))}withReplace(t,e=void 0){return i(this,new r(...super.map(s=>s.replace(t,e))))}withReplaceAll(t,e=void 0){return i(this,new r(...super.map(s=>s.replaceAll(t,e))))}toLowerCase(){return i(this,new r(...super.map(t=>t.toLowerCase())))}toUpperCase(){return i(this,new r(...super.map(t=>t.toUpperCase())))}toCapitalize(){return this.withReplace(/\b\w/g,t=>t.toUpperCase())}toUnCapitalize(){return this.withReplace(/\b\w/g,t=>t.toLowerCase())}value(t){if(typeof t=="string"&&(this.enum[t]||this.hasEmpty&&t===""))return t;throw new Error(`Invalid value ${t}`)}mutable(){return Array.from(this)}toRecordValue(t=void 0,...e){return Object.assign({},...e,Object.fromEntries(super.map(s=>[s,t])))}toRecordType(t="any",e=void 0,...s){return Object.assign({},...s,Object.fromEntries(super.map(u=>[u,e])))}map(){let t=this.mutable();return t.map.apply(t,arguments)}filter(){let t=this.mutable();return t.filter.apply(t,arguments)}reduce(){let t=this.mutable();return t.reduce.apply(t,arguments)}reduceRight(){let t=this.mutable();return t.reduceRight.apply(t,arguments)}flat(){let t=this.mutable();return t.flat.apply(t,arguments)}flatMap(){let t=this.mutable();return t.flatMap.apply(t,arguments)}with(){let t=this.mutable();return t.with.apply(t,arguments)}},y=Object.freeze({push:"push",unshift:"unshift",shift:"shift",copyWithin:"copyWithin",pop:"pop",fill:"fill",splice:"splice"});function l(...r){let n=r,t=r.some(e=>typeof e!="string");return r.length&&t&&(typeof window>"u",n=r.flatMap(e=>Array.isArray(e)?e.filter(s=>typeof s=="string"):typeof e=="string"?[e]:typeof e=="number"?[String(e)]:[])),new o(...n)}var m=l,c=l,O={stringList:m,sl:c};export{O as default,c as sl,m as stringList};
