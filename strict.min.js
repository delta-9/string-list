var f=Object.defineProperty;var h=(t,s,e)=>s in t?f(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var a=(t,s,e)=>(h(t,typeof s!="symbol"?s+"":s,e),e);var i=(t,s)=>{if(t&&s&&Object.isFrozen(t)){/* c8 ignore next 3 @preserve */return Object.freeze(s)}return s},o=class t extends Array{constructor(...e){let r=[],n=[],u=!1;for(let p of e.flat())typeof p=="string"&&(p===""&&(u=!0),r.push([p,p]),n.push(p));super(...n);a(this,"infered",{Union:void 0,Tuple:void 0,Mutable:void 0,Unsorted:void 0});a(this,"enum");a(this,"hasEmpty",!1);this.hasEmpty=u,this.enum=Object.fromEntries(r),this.hasEmpty&&(this.enum[""]=""),Object.freeze(this.enum)}concat(...e){return i(this,new t(...super.concat.apply(this,e.flat())))}concatList(e){return this.concat(...e)}toSorted(){return i(this,new t(...super.toSorted.apply(this,arguments)))}toReversed(){return i(this,new t(...super.toReversed.apply(this,arguments)))}reverse(){return i(this,new t(...super.reverse.apply(this,arguments)))}toSpliced(){return i(this,new t(...super.toSpliced.apply(this,arguments)))}slice(){return i(this,new t(...super.slice.apply(this,arguments)))}without(){let e=Array.from(arguments).flatMap(r=>Array.isArray(r)?r.filter(n=>typeof n=="string"):typeof r=="string"?[r]:[]);return i(this,new t(...this.filter(r=>!e.includes(r))))}withTrim(){return i(this,new t(...super.map(e=>e.trim())))}withPrefix(e=""){return i(this,new t(...super.map(r=>`${e}${r}`)))}withSuffix(e=""){return i(this,new t(...super.map(r=>`${r}${e}`)))}withReplace(e,r=void 0){return i(this,new t(...super.map(n=>n.replace(e,r))))}withReplaceAll(e,r=void 0){return i(this,new t(...super.map(n=>n.replaceAll(e,r))))}toLowerCase(){return i(this,new t(...super.map(e=>e.toLowerCase())))}toUpperCase(){return i(this,new t(...super.map(e=>e.toUpperCase())))}toCapitalize(){return this.withReplace(/\b\w/g,e=>e.toUpperCase())}toUnCapitalize(){return this.withReplace(/\b\w/g,e=>e.toLowerCase())}value(e){if(typeof e=="string"&&(this.enum[e]||this.hasEmpty&&e===""))return e;throw new Error(`Invalid value ${e}`)}mutable(){return Array.from(this)}toRecordValue(e=void 0,...r){return Object.assign({},...r,Object.fromEntries(super.map(n=>[n,e])))}toRecordType(e="any",r=void 0,...n){return Object.assign({},...n,Object.fromEntries(super.map(u=>[u,r])))}asMap(){return new Map(super.map(e=>[e,e]))}asSet(){return new Set(this)}asObject(){return Object.assign({},...super.map(e=>({[e]:e})))}map(){let e=this.mutable();return e.map.apply(e,arguments)}filter(){let e=this.mutable();return e.filter.apply(e,arguments)}reduce(){let e=this.mutable();return e.reduce.apply(e,arguments)}reduceRight(){let e=this.mutable();return e.reduceRight.apply(e,arguments)}flat(){let e=this.mutable();return e.flat.apply(e,arguments)}flatMap(){let e=this.mutable();return e.flatMap.apply(e,arguments)}with(){let e=this.mutable();return e.with.apply(e,arguments)}},w=Object.freeze({push:"push",unshift:"unshift",shift:"shift",copyWithin:"copyWithin",pop:"pop",fill:"fill",splice:"splice"});function c(...t){let s=t,e=t.some(r=>typeof r!="string");return t.length&&e&&(typeof window>"u"&&process&&process.env,s=t.flatMap(r=>Array.isArray(r)?r.filter(n=>typeof n=="string"):typeof r=="string"?[r]:typeof r=="number"?[String(r)]:[])),new o(...s)}function l(...t){return Object.freeze(c(...t))}var m=l,d=l,E={stringList:m,sl:d};export{E as default,d as sl,m as stringList};
